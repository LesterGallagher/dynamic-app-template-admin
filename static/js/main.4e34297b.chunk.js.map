{"version":3,"sources":["lib/firebase.js","components/Loader/Loader.js","components/Loading/Loading.js","components/Loader/Loader.module.css","components/Loading/Loading.module.css","constants/routes.js","containers/AppliedRoute.js","containers/AuthenticatedRoute.js","containers/UnauthenticatedRoute.js","containers/AsyncComponent.js","containers/Routes.js","containers/App.js","serviceWorker.js","reducers/index.js","store.js","index.js"],"names":["firebase_app__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","firebase_app__WEBPACK_IMPORTED_MODULE_0___default","n","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","setPersistence","Auth","Persistence","SESSION","firestore","functions","Loader","react_default","a","createElement","className","styles","pageLoader","cx","cy","r","Component","Loading","loading","components_Loader_Loader","module","exports","loader","d","__webpack_exports__","HOME","SIGN_IN","APPS","SPECIFIC_APP","SPECIFIC_APP_PAGE","SPECIFIC_APP_SETTINGS","SPECIFIC_APP_OVERVIEW","AppliedRoute","_ref","C","component","cProps","props","rest","Object","objectWithoutProperties","react_router","assign","render","AuthenticatedRoute","isAuthenticated","to","concat","location","pathname","search","UnauthenticatedRoute","hashQuery","window","href","split","redirect","queryString","parse","asyncComponent","importComponent","loadingComponent","arguments","length","undefined","_Component","AsyncComponent","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","sent","default","setState","stop","apply","Home","Promise","all","e","then","bind","Singin","AppsList","SpecificApp","Routes","childProps","react_router_dom","exact","path","ROUTES","App","userHasAuthenticated","isEmpty","isLoaded","containers_Routes","react_toastify","enhance","compose","firebaseConnect","connect","_ref$firebase","profile","Boolean","hostname","match","combineReducers","firebaseReducer","firestoreReducer","middleware","applyMiddleware","promise","thunk","logger","rrfConfig","userProfile","attachAuthIsReady","profileFactory","userData","profileData","user","public","objectSpread","createStoreWithFirebase","reactReduxFirebase","reduxFirestore","createStore","reducer","rootElement","document","getElementById","hasChildNodes","hydrate","es","store","containers_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4e34297b.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/database'\nimport 'firebase/firestore' // <- needed if using firestore\nimport 'firebase/functions' // <- needed if using httpsCallable\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCaS8dXhdbJcUcYQIdyIyXdNZYCWkzpxrk\",\n    authDomain: \"dynamic-template-app.firebaseapp.com\",\n    databaseURL: \"https://dynamic-template-app.firebaseio.com\",\n    projectId: \"dynamic-template-app\",\n    storageBucket: \"dynamic-template-app.appspot.com\",\n    messagingSenderId: \"420758845304\",\n    appId: \"1:420758845304:web:394c65df279b8c73\"\n};\n\n// Initialize firebase instance\nfirebase.initializeApp(firebaseConfig);\nfirebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION)\n\n// Initialize other services on firebase instance\nfirebase.firestore() // <- needed if using firestore\nfirebase.functions() // <- needed if using httpsCallable\n\nexport default firebase;\n\n","import React, { Component } from 'react';\nimport styles from './Loader.module.css';\n\nclass Loader extends Component {\n    render() {\n        return (\n            <svg className={styles.pageLoader}>\n                <circle cx=\"75\" cy=\"75\" r=\"20\"></circle>\n                <circle cx=\"75\" cy=\"75\" r=\"35\"></circle>\n                <circle cx=\"75\" cy=\"75\" r=\"50\"></circle>\n                <circle cx=\"75\" cy=\"75\" r=\"65\"></circle>\n            </svg>\n        );\n    }\n}\n\nexport default Loader;\n","import React, { Component } from 'react';\nimport Loader from '../../components/Loader/Loader';\nimport styles from './Loading.module.css';\n\nclass Loading extends Component {\n    render() {\n        return (<div className={styles.loading}>\n            <Loader />\n        </div>);\n    }\n}\n\nexport default Loading;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageLoader\":\"Loader_pageLoader__30zfX\",\"loader\":\"Loader_loader__1y5-P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Loading_loading__1aGYf\"};","\nexport const HOME = '/';\n\nexport const SIGN_IN = '/sign-in';\n\nexport const APPS = '/apps';\n\nexport const SPECIFIC_APP = '/apps/:appId';\n\nexport const SPECIFIC_APP_PAGE = '/apps/:appId/pages/:appPage';\n\nexport const SPECIFIC_APP_SETTINGS = '/apps/:appId/settings';\n\nexport const SPECIFIC_APP_OVERVIEW = '/apps/:appId'\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nexport default ({ component: C, props: cProps, ...rest }) =>\n  <Route {...rest} render={props => <C {...props} {...cProps} />} />;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { SIGN_IN } from \"../constants/routes\";\n\nexport default ({ component: C, props: cProps, ...rest }) =>\n    <Route\n        {...rest}\n        render={props =>\n            cProps.isAuthenticated\n                ? <C {...props} {...cProps} />\n                : <Redirect\n                    to={`${SIGN_IN}?redirect=${props.location.pathname}${props.location.search}`}\n                />}\n    />;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport queryString from 'query-string';\n\nexport default ({ component: C, props: cProps, ...rest }) => {\n    const hashQuery = window.location.href.split('?')[1];\n    const redirect = queryString.parse(hashQuery).redirect || null;\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          !cProps.isAuthenticated\n            ? <C {...props} {...cProps} />\n            : <Redirect\n                to={redirect === \"\" || redirect === null ? \"/\" : redirect}\n              />}\n      />\n    );\n  };","// https://serverless-stack.com/chapters/code-splitting-in-create-react-app.html\n\nimport React, { Component } from \"react\";\nimport Loading from \"../components/Loading/Loading\";\n\nexport default function asyncComponent(importComponent, loadingComponent = Loading) {\n  class AsyncComponent extends Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        component: loadingComponent\n      };\n    }\n\n    async componentDidMount() {\n      const { default: component } = await importComponent();\n\n      this.setState({\n        component: component\n      });\n    }\n\n    render() {\n      const C = this.state.component;\n\n      return C ? <C {...this.props} /> : null;\n    }\n  }\n\n  return AsyncComponent;\n}","\nimport React, { Component } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport AppliedRoute from './AppliedRoute';\nimport AuthenticatedRoute from './AuthenticatedRoute';\nimport UnauthenticatedRoute from './UnauthenticatedRoute';\nimport asyncComponent from './AsyncComponent';\nimport * as ROUTES from '../constants/routes';\n\nconst Home = asyncComponent(() => import('./Home'));\nconst Singin = asyncComponent(() => import('./Signin'));\nconst AppsList = asyncComponent(() => import('./AppsList'));\nconst SpecificApp = asyncComponent(() => import('./SpecificApp'));\n\nclass Routes extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n    render() {\n        const { childProps } = this.props;\n\n        return ( \n            <Router>\n                <AppliedRoute exact path={ROUTES.HOME} component={Home} props={childProps} />\n                <UnauthenticatedRoute exact path={ROUTES.SIGN_IN} component={Singin} props={childProps} />\n                <AuthenticatedRoute exact path={ROUTES.APPS} component={AppsList} props={childProps} />\n                <AuthenticatedRoute path={ROUTES.SPECIFIC_APP} component={SpecificApp} props={childProps} />\n            </Router>\n         );\n    }\n}\n\nexport default Routes;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Routes from './Routes';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { ToastContainer } from 'react-toastify';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAuthenticated: false,\n      userHasAuthenticated: true\n    }\n  }\n  render() {\n    const childProps = {\n      isAuthenticated: !this.props.auth.isEmpty,\n      userHasAuthenticated: this.props.auth.isLoaded\n    };\n    return (\n      <div className=\"App\">\n        <Routes childProps={childProps} />\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n\nconst enhance = compose(\n  firebaseConnect(),\n  connect(\n    // Map redux state to component props\n    ({ firebase: { auth, profile } }) => ({\n      auth,\n      profile,\n    })\n  )\n)\n\nexport default enhance(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nimport { createStore, combineReducers, compose } from 'redux'\nimport { reactReduxFirebase, firebaseReducer } from 'react-redux-firebase'\nimport { reduxFirestore, firestoreReducer } from 'redux-firestore' // <- needed if using firestore\n\n\nexport default combineReducers({\n  firebase: firebaseReducer,\n  firestore: firestoreReducer // <- needed if using firestore\n})\n","import { applyMiddleware, createStore, compose } from 'redux';\nimport { reactReduxFirebase } from 'react-redux-firebase'\nimport { reduxFirestore } from 'redux-firestore' // <- needed if using firestore\nimport firebase from './lib/firebase';\n\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport promise from 'redux-promise-middleware';\n\nimport reducer from './reducers';\n\nconst middleware = applyMiddleware(promise, thunk, logger);\n\n// react-redux-firebase config\nconst rrfConfig = {\n    userProfile: 'users',\n    attachAuthIsReady: true,\n    profileFactory: (userData, profileData) => {\n        const { user } = userData;\n        return {\n            public: {\n                ...user\n            }\n        }\n    }\n    // useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n}\n\n// Add reactReduxFirebase enhancer when making store creator\nexport const createStoreWithFirebase = compose(\n    reactReduxFirebase(firebase, rrfConfig), // firebase instance as first argument\n    reduxFirestore(firebase) // <- needed if using firestore\n)(createStore)\n\nexport default createStoreWithFirebase(reducer, middleware);\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/stable';\nimport 'raf/polyfill';\nimport 'bootswatch/sandstone/bootstrap.css';\nimport React from 'react';\nimport { render, hydrate } from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nconst rootElement = document.getElementById(\"root\");\nif (rootElement.hasChildNodes()) {\n  hydrate(<Provider store={store}><App /></Provider>, rootElement);\n} else {\n  render(<Provider store={store}><App /></Provider>, rootElement);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}